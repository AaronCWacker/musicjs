pattern 2 still isn't all that musical. So far the original cs seems to work best, choosing the patterns in your head.

chord is root + pitch_classes
note_offsets is (pitch_class + root) % 12
then use a < x < b and x % 12 == c
when constructing structure of related chords,
we want note_offsets, but that can be generated by a method
We want to make two arrays:
  major_chords
  minor_chords
containing the actual Chord structures, and refer to these.
But we want that two chords are identical objects if
their root and pitch_classes are identical.
So we want a way to get a chord object with given pitches.

Earlier progress is to rewrite cs to use new random number system from pattern1.html


have root note with +/- in UI.
so have note_number to pitch function.
could parse output of midi_number_to_abc
and use use_sharps variable

for staying within key, we have 6 chords
  0, 2, 4, 5, 7, 9
and use repeat+filter to get all notes in key in rnage 0..127
then filter for those between low_note and high_note.
But we have 7 possible notes within one octave
  0, 2, 4, 5, 7, 9, 11
so indices [0, 4, 7, 9, 7, 4] e.g. refer to notes in array
filtered by [0,2,4,7,9,11] but we choose base notes from
array filtered by [0,2,4,5,7,9]

